// ーバリデーションでしたいことの手順ー
// 目的→入力欄に誤りや空白があればエラー表示を出す
// アクセスがPOST以外だったらinput.phpにリダイレクト(buttonタグのvalueにリダイレクト時の名前を入れる)
// バリデーションのコードを書く
    // 値をinputより取得
    // inputの値を多次元配列の値に代入する（多次元配列[data][errors]１次元）
    // 
// バリデーションに引っ掛かったら、"$flag==0"を表示
    // "$flag==0"に多次元配列の値を出力（buttonタグのvalueの値が一致すれば）
    // 何が必須項目なのか下の行に表示
// "$flag==0"にinput.phpの値を表示&バリデーションに引っ掛かった部分を追加入力してもらう
// バリデーションに引っ掛からなかったら、"$flag==1"を表示（buttonタグのvalueが一致すれば）
// "$flag==1"をthanks.phpに飛ばす


// 関数を取り入れたい項目：メールアドレス、バリデーション
// メールアドレス→メールアドレス形式かを関数化

// バリデーション：必須項目を関数化

関数切り取り部分（間違えてるやつ：細分化し過ぎ）
// 関数
// したいこと：・バリデーションを関数化にする
// 現時点： 配列の最後が繰り返し表示されている
// 多次元配列でなく、連想配列でもできる？
    // $data = ["姓", "名", "セイ", "メイ"]; //表示したいエラータイトルを配列化

    //     foreach($data as $val){ //配列を一つずつ取り出す
    //         $val;
    //     }
    // function isNecessary($category){ //関数化（ユーザー定義型）
    //     $request["posts"]["first-name"] = $_POST["first-name"]; //関数内でpostsとerrorsを多次元配列化する
    //     $request["errors"]["first-name"] = "";
        
    //     if (empty($request["posts"]["first-name"])){ //postsが空だったら必須項目ですと表示
    //         return "※{$category}は必須項目です";
    //     }elseif(!empty($request["errors"]["first-name"])){ //errorsが空でなかったらerrorsの子を表示
    //         return $request["errors"]["first-name"];
    //     }
    // }

    // $isNecessaryCategory = isNecessary($val); //関数を変数に代入（html内で受け取る）

    // function isMyname($name){
    //     return "私の名前は{$name}です";
    // }

    // $display_name = isMyname("川阪");
    


// バリデーション詳細（項目毎)
// if(empty($request["posts"]["first-name"])){
//     $request["errors"]["first-name"] = "※名は必須項目です";
// }

// if(empty($request["posts"]["last-name"])){
//     $request["errors"]["last-name"] = "※姓は必須項目です";
// }

// if(empty($request["posts"]["last-kananame"])){
//     $request["errors"]["last-kananame"] = "※フリガナ（セイ）は必須項目です";
// }elseif(!preg_match("/^[ァ-ヶー]+$/u", $request["posts"]["last-kananame"])){
//     $request["errors"]["last-kananame"] = "※カタカナで入力してください";
// }

// if(empty($request["posts"]["first-kananame"])){
//     $request["errors"]["first-kananame"] = "※フリガナ（メイ）は必須項目です";
// }elseif(!preg_match("/^[ァ-ヶー]+$/u", $request["posts"]["first-kananame"])){
//     $request["errors"]["first-kananame"] = "※カタカナで入力してください";
// }

// if(empty($request["posts"]["zip"])){
//     $request["errors"]["zip"] = "※郵便番号は必須項目です";
// }elseif(!preg_match("/^[0-9]{7}$/", $request["posts"]["zip"])){
//     $request["errors"]["zip"] = "※-(ハイフン)抜き半角数字で入力してください";
// }

// if(empty($request["posts"]["pref"])){
//     $request["errors"]["pref"] = "※都道府県は必須項目です";
// }

// if(empty($request["posts"]["city"])){
//     $request["errors"]["city"] = "※市町村は必須項目です";
// }

// if(empty($request["posts"]["num"])) {
//     $request["errors"]["num"] = "※番地は必須項目です";
// }

// if(empty($request["posts"]["tel"])){
//     $request["errors"]["tel"] = "※電話番号は必須項目です";
// }elseif(!preg_match("/^[0-9]{9,11}$/", $request["posts"]["tel"])){
//     $request["errors"]["tel"] = "-(ハイフン)抜き半角数字で入力してください";
// }

// // メールアドレスバリデーション
// if($request["posts"]["email"] === $request["posts"]["c_email"]){
//     if(empty($request["posts"]["email"] && $request["posts"]["c_email"])){
//         $request["errors"]["email"] = "※メールアドレスは必須項目です";
//     }
    
//     if(!preg_match("/^[a-z][a-zA-Z0-9_¥.¥-]*@[a-zA-Z0-9_¥.¥-]+$/",$request["posts"]["email"])){
//         $request["errors"]["email"] = "※メールアドレス形式で入力してください";
//     }

//     if(!preg_match("/^[a-z][a-zA-Z0-9_¥.¥-]*@[a-zA-Z0-9_¥.¥-]+$/",$request["posts"]["c_email"])){
//         $request["errors"]["c_email"] = "※メールアドレス形式で入力してください";
//     }
// }else{
//     $request["errors"]["c_email"] = "※メールアドレスが一致しません";
// }

// if(empty($request["posts"]["content"])){
//     $request["errors"]["content"] = "※内容は必須項目です";
// }


